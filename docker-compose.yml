services:
    redis:
        image: redis:alpine
        ports:
            - 6379:6379

    rabbitmq:
        image: rabbitmq:3.9-management-alpine
        hostname: 'mabbit'
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - rabbitmq:/var/lib/rabbitmq

    #    blackfire:
    #        image: blackfire/blackfire
    #        environment:
    #            - BLACKFIRE_SERVER_ID
    #            - BLACKFIRE_SERVER_TOKEN
    #        networks:
    #            - local

    elasticsearch:
        build: docker/elasticsearch
        environment:
            - 'discovery.type=single-node'
            - 'bootstrap.memory_lock=true'
            - 'ES_JAVA_OPTS=-Xms1024m -Xmx1024m'
            - 'xpack.security.enabled=false'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - 9200:9200
        volumes:
            - esdata:/usr/share/elasticsearch/data

    kibana:
        image: docker.elastic.co/kibana/kibana:${ELK_STACK_VERSION}
        ports:
            - 5601:5601
        depends_on:
            - elasticsearch

    varnish:
        build:
            context: docker/varnish
        platform: linux/arm/v7
        command:
            - '/bin/sh'
            - '-c'
            - >
                sed -i "s/_BACKEND_HOST_/$${BACKEND_HOST}/g" /etc/varnish/default.vcl &&
                sed -i "s/_BACKEND_PORT_/$${BACKEND_PORT}/g" /etc/varnish/default.vcl &&
                sed -i "s/_PUBLIC_PORT_/$${PUBLIC_PORT}/g" /etc/varnish/default.vcl &&
                varnishd -F -f /etc/varnish/default.vcl -t 0
        ports:
            - '${VARNISH_PUBLIC_PORT}:80'
        environment:
            - 'BACKEND_HOST=${VARNISH_BACKEND_HOST}'
            - 'BACKEND_PORT=${VARNISH_BACKEND_PORT}'
            - 'PUBLIC_PORT=${VARNISH_PUBLIC_PORT}'
            - 'DEBUG=${VARNISH_DEBUG}'
        tmpfs:
            - /var/lib/varnish/varnishd:exec

volumes:
    esdata:
    rabbitmq:
